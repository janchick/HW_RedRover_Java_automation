import java.util.Arrays;

public class Hw_6 {
    public static void main(String[] args) {
        //Задача №1
       //Дана строка:
        //String s = “Перестановочный алгоритм быстрого действия”;
        //необходимо вывести все буквы “о” из этой строки.
        //Для указанной строки ответ будет “ооооо” (или в столбик)

        String str1 = "Перестановочный алгоритм быстрого действия";
        String result = ""; // Инициализируем пустую строку для результата

        for (char c : str1.toCharArray()) {   //преобразует строку в массив символов (char[]), где каждый элемент массива представляет отдельный символ строки.
            if (c == 'о') {
                result += c; // Добавляем букву 'о' к результату
            }
        }

        System.out.println(result);

        //Задача №2
        //Дана строка:
        //String s = “Перевыборы выбранного президента”;
        //необходимо подсчитать количество букв “е” в строке.
        //Для указанной строки ответ будет 4.

        String str2 = "Перевыборы выбранного президента"; // Исходная строка
        int count = 0; // Переменная для подсчета букв "е"

        for (char c : str2.toCharArray()) { // Перебираем каждый символ в строке
            if (c == 'е') { // Проверяем, является ли символ буквой "е"
                count++; // Увеличиваем счетчик на 1
            }
        }

        // Выводим количество букв "е"
        System.out.println("Количество букв 'е': " + count);


        //Задача №3
        //
        //Дана строка:
        //String s = “Посмотрите как Рите нравится ритм”;
        //необходимо вывести индексы начала всех подстрок - “рит”, независимо от регистра.
        //Для указанной строки ответ будет 6, 15, 29.
               String str3 = "Посмотрите как Рите нравится ритм"; // Исходная строка
                String substring = "рит"; // Подстрока для поиска
                int index = 0; // Начальный индекс для поиска
                boolean found = false; // Флаг для проверки наличия подстроки

                // Приводим строку к нижнему регистру для независимости от регистра
                String lowerCaseString = str3.toLowerCase();

                // Цикл для поиска всех вхождений подстроки
                while ((index = lowerCaseString.indexOf(substring, index)) != -1) {
                    System.out.println(index); // Выводим индекс
                    index++; // Увеличиваем индекс для поиска следующего вхождения
                    found = true; // Устанавливаем флаг в true, если подстрока найдена
                }

                // Если подстрока не найдена, можно вывести сообщение
                if (!found) {
                    System.out.println("Подстрока не найдена.");
                }
            //Экстра задача
        //
        //Дан массив:
        //String[][] array = {{“Привет”, “всем”, “кто”}, {“изучает”, “язык”, “программирования”}, {“java”}};
        //необходимо подсчитать количество строк в массиве, которые не содержат буквы “е”.

        //Экстра-экстра задача
        //
        //Создайте массив размером 5 на 5 (или 10 на 10, или любого другого размера так, чтобы количество строк и количество столбцов совпадало).
        //
        //Преобразуйте этот массив таким образом, чтобы то, что было строками, стало столбцами и наоборот. Внимание! Не надо менять структуру массива. Задание требует только переместить элементы массива.
        //
        //Тип элементов массива может быть любой по вашему выбору.
        //
        //Пример:
        //
        //
        //Если взять массив целых чисел размером 3 на 3:
        //
        //1
        //2
        //3
        //4
        //5
        //6
        //7
        //8
        //9
        //
        //
        //то после преобразования он должен выглядеть вот так:
        //
        //1
        //4
        //7
        //2
        //5
        //8
        //3
        //6
        //9

    }
}
